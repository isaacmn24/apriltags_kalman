<?xml version="1.0"?>
<launch>
	<!--********** arg **********-->
	<arg name="mav_name" default="hummingbird"/>
	<arg name="drone_name" default="$(arg mav_name)"/>
	<arg name="roboID" default="0"/>

	<arg name="is_input_joystick" default="false"/>
	<arg name="enable_meshes" default="true"/>
	<arg name="enable_wind" default="true"/>
	<arg name="enable_physics" default="true"/>
	<arg name="enable_sensors" default="true"/>
	<arg name="enable_logging" default="false" />
	<arg name="enable_ground_truth" default="true" />
	<arg name="enable_mavlink_interface" default="false"/>

	<arg name="world_name" default="basic"/>
	<arg name="debug" default="false"/>
	<arg name="gui" default="true"/>
	<arg name="paused" default="false"/>
	<arg name="log_file" default="$(arg mav_name)_$(arg drone_name)"/>
	<arg name="wait_to_record_bag" default="false"/>
	<arg name="verbose" default="true"/>

	<arg name="X" default="0.0"/>
	<arg name="Y" default="0.0"/>
	<arg name="Z" default="0.0"/> -->



		<!--********** load env **********-->
		<!-- <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/> -->
		<!-- <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/> -->
		
		
		<include file="$(find gazebo_ros)/launch/empty_world.launch">
			<arg name="world_name" value="$(find rotors_description)/worlds/$(arg world_name).world" />
			<arg name="debug" value="$(arg debug)" />
			<arg name="paused" value="$(arg paused)" />
			<arg name="gui" value="$(arg gui)" />
			<arg name="verbose" value="$(arg verbose)"/>
		</include> 




		<!-- ********** spawn model ********** -->

	<!-- Drone 1 -->
	<group ns="hummingbird_1">
		<include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
			<arg name="mav_name" value="$(arg mav_name)" />
			<!-- odom and imu should be included in mav_generic_odometry_sensor.gazebo -->
			<arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
			<arg name="enable_logging" value="$(arg enable_logging)" />
			<arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
			<arg name="log_file" value="$(arg log_file)"/>
			<arg name="namespace" value="hummingbird_1"/>
			<arg name="x" value="-1"/>
  			<arg name="y" value="-2"/>
  			<arg name="z" value="3"/>
		</include>

		<node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
			<rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
			<rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
			<remap from="odometry" to="odometry_sensor1/odometry" />
			<!-- <remap from="command/motor_speed" to="command/motor_speed_lee" /> -->
		</node>

		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
	</group>

	<!-- Drone 2 -->
	<group ns="hummingbird_2">
	<include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
		<arg name="mav_name" value="hummingbird" />
		<arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
		<arg name="enable_logging" value="$(arg enable_logging)" />
		<arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
		<arg name="log_file" value="hummingbird2_log" />
		<arg name="namespace" value="hummingbird_2"/>
		<arg name="x" value="1"/>
		<arg name="y" value="0"/>
		<arg name="z" value="3"/>
	</include>

	<node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
		<rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_hummingbird.yaml" />
		<rosparam command="load" file="$(find rotors_gazebo)/resource/hummingbird.yaml" />
		<remap from="odometry" to="odometry_sensor1/odometry" />
	</node>

	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
	</group>

	<!-- Drone 3 -->
	<group ns="hummingbird_3">
	<include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
		<arg name="mav_name" value="hummingbird" />
		<arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
		<arg name="enable_logging" value="$(arg enable_logging)" />
		<arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
		<arg name="log_file" value="hummingbird3_log" />
		<arg name="namespace" value="hummingbird_3"/>
		<arg name="x" value="2"/>
		<arg name="y" value="2"/>
		<arg name="z" value="3"/>
	</include>

	<node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
		<rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_hummingbird.yaml" />
		<rosparam command="load" file="$(find rotors_gazebo)/resource/hummingbird.yaml" />
		<remap from="odometry" to="odometry_sensor1/odometry" />
	</node>

	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
	</group>

<group ns="apriltag_box">
  	<include file="$(find rotors_description)/launch/apriltag_box.launch">
			<arg name="anafi_component" value="apriltag_box"/>
			<arg name="namespace" value="apriltag_box"/>
			<arg name="x" value="2.0"/>
			<arg name="y" value="0.0"/>
			<arg name="z" value="3"/>
	</include>  
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

</group>


<node name="camera_frame_id_fixer" pkg="rotors_description" type="camera_correction.py" />


</launch>


